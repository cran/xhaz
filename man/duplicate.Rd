% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duplicate.R
\name{duplicate}
\alias{duplicate}
\title{duplicate function}
\usage{
duplicate(status, event, data)
}
\arguments{
\item{status}{the censoring status indicator (numeric vector),
0=alive, 1=dead.}

\item{event}{the indicator of the event type (numeric vector).
By default, the event==0 acts as the censoring indicator.}

\item{data}{a data frame containing the data to duplicate.}
}
\value{
A data.frame containing the duplicated data with the new dummy
variables, named \code{delta.number_of_the_event}, indicating the type of
event.
}
\description{
Duplicate data for survival analysis in the context of
competing risks, where an individual can experience only one of alternative
events, using the Lunn & McNeil (Biometrics, 1995) approaches.
Duplication of data proceeds as follows: Suppose that we study \code{J}
distinct types of events. Each observation concerning a given subject is
duplicated \code{J} times, with one row for each type of event. In addition,
\code{(J-1)} dummy variables are created, each indicating the type of event
in relation with that observation (\code{delta.j=1} if the event of type j
is the observed one and \code{0} otherwise).
Since, for a given subject, only the first occurring event is considered,
the status indicator equals \code{1} for that event and \code{0} for all the
others. In the case of a censored observation (dropout or administrative
censoring), the same principle applies also: duplication of each subject's
data is made \code{J} times with \code{(J-1)} dummy variables and a status
indicator equal to \code{0} for all observations.
}
\examples{

## Create the simplest test data set
data1 <- data.frame(futime = c(1, 2, 5, 2, 1, 7, 3, 4, 8, 8),
                    fustat = c(0, 1, 1, 1, 0, 0, 1, 0, 1, 1),
                    firstevent = c(0, 2, 1, 2, 0, 0, 1, 0, 2, 2),
                    x = c(1, 0, 0, 1, 0, 1, 1, 1, 0, 0))

## Duplicate data1 with firstevent == 0 as the censoring indicator.
dupli.data <- duplicate(status=fustat, event=firstevent, data=data1)


data2 <- data.frame(futime = c(10, 2, 7, 3, 4, 9, 13, 2, 5, 9),
                    fustat = c(0, 1, 1, 1, 0, 0, 1, 0, 1, 1),
                    firstevent = c(3, 2, 1, 2, 3, 3, 1, 3, 2, 2),
                    x = c(1, 0, 0, 1, 0, 1, 1, 1, 0, 0))


## Duplicate data1 with firstevent == 3 as the censoring indicator.

dupli.data <- duplicate(status = fustat,
                        event = firstevent == 3,
                        data = data2)


# Joint modeling
coxph(Surv(futime, fustat) ~ delta.2 + x + delta.2:(x), data = dupli.data)

coxph(Surv(futime, fustat) ~ delta.1 + x + delta.1:(x), data = dupli.data)


}
\references{
Lunn M and McNeil D. Applying Cox regression to competing risks.
Biometrics 1995;51:524-532
(\href{https://pubmed.ncbi.nlm.nih.gov/7662841/}{PubMed})
}
\author{
Roch Giorgi
}
\keyword{duplicate}
